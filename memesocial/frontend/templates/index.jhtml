{% extends "base.jhtml" %}

{% block body %}
    <div class="container-fluid" ng-app="myApp" ng-controller="myController">
	<div class="container">
	    <div id="actDiv" class="row row-centered">
		<div class="center-block">
		    <img alt="" src="{{ url_for('static', filename='imgs/memesocial.png') }}"/>
		    <p style="color: #efe0e0">A social network only for sharing and creating memes</p>
		</div>
	    </div>
	    
	    <div ng-hide="hideIt || hideIt1" class="row row-centered" style="margin-top: 1em;">
		<div class="center-block">
		    <a ng-click="registerUser();" id="regButt" style="width: 20em;" class="btn btn-primary btn-outline">Register a new account</a>
		</div>
	    </div>
	    
	    <div id="myElem" ng-hide="!hideIt" class="row row-centered" style="margin-top: 1em;">

		<form ng-submit="connectRest()">
		    <div class="center-block">
			<div class="form-group has-feedback registerGroup" style="border-bottom: 1px solid #dadaad">
			    <input ng-model="formData.username" style="border-radius: 0px;" type="text" class="form-control myInp" placeholder="Username" aria-describedby="basic-addon1">
			    <i ng-hide="!formData.username || userTruth" class="glyphicon glyphicon-ok form-control-feedback"></i>
			    <i ng-hide="!formData.username || !userTruth" class="glyphicon glyphicon-remove form-control-feedback"></i>
			    
			</div>
		    </div>

		    <div class="center-block">
			<div class="form-group has-feedback registerGroup" style="border-bottom: 1px solid #dadaad">
			    <input ng-model="formData.email" style="border-radius: 0px;"  class="form-control myInp" type="email" placeholder="Email" aria-describedby="basic-addon1">
			    <i ng-hide="!formData.email || emailTruth" class="glyphicon glyphicon-ok form-control-feedback"></i>
			    <i ng-hide="!formData.email || !emailTruth" class="glyphicon glyphicon-remove form-control-feedback"></i>
			</div>
		    </div>
		    
		    <div class="center-block">
			<div class="input-group registerGroup" style="border-bottom: 1px solid #dadaad">
			    <input  ng-model="formData.password" style="border-radius: 0px;" class="form-control myInp" type="password" placeholder="Password" aria-describedby="basic-addon1">
			</div>
		    </div>
		    <input type="submit" style="position: absolute; left: -9999px"/>

		</form>
		
	    </div>

	    
	    <div id="myElem1" ng-hide="!hideIt1" class="row row-centered" style="margin-top: 1em;">

		<form ng-submit="logEvt()">
		    <div class="center-block">
			<div class="form-group has-feedback registerGroup" style="border-bottom: 1px solid #dadaad">
			    <input ng-model="loginData.username" style="border-radius: 0px;" type="text" class="form-control myInp" placeholder="Username" aria-describedby="basic-addon1">
			    
			</div>
		    </div>
		    
		    <div class="center-block">
			<div class="input-group registerGroup" style="border-bottom: 1px solid #dadaad">
			    <input  ng-model="loginData.password" style="border-radius: 0px;" class="form-control myInp" type="password" placeholder="Password" aria-describedby="basic-addon1">
			</div>
		    </div>
		    
		    <input type="submit" style="position: absolute; left: -9999px"/>
		    
		</form>
	    </div>

	    <div class="row row-centered" ng-if="message.truth">
		<div class="center-block well" id="myWell">
		    <p>{a message.data  a}</p>
		</div>
	    </div>
	    
	    <div  id="myElem2" ng-hide="hideIt" class="row row-centered" ng-click="logEvt();" style="margin-top: 1em;">
		<div class="center-block">
		    <a data-target="#login-modal" id="logButt" class="btn btn-primary btn-outline">Login</a>
		</div>
	    </div>

	    <div ng-hide="!hideIt" ng-click="connectRest()" class="row row-centered" style="margin-top: 1em;">
		<div class="center-block">
		    <a id="rButt" class="btn btn-primary btn-outline">Register</a>
		</div>
	    </div>
	    
	</div>	
    </div>

    
    <nav class="navbar navbar-custom navbar-fixed-bottom">
	<div id="mySlogan" class="text-center">
	    Built with <i class="fa fa-heart"   style="color: red" aria-hidden="true"></i> and tons of <i class="fa fa-coffee" style="color: #1f1b1b" aria-hidden="true"></i> by Mohamed Aziz Knani
	</div>
    </nav>

    <script>
     
     $('#logButt').width($('#regButt').width());
     $('#myWell').width($('#regButt').width());
     $('#rButt').width($('#regButt').width());
     $('.registerGroup').width($('#logButt').width() + $('#logButt').css('paddingLeft').replace('px', '') * 2 + 2);

     
     var colors = new Array(
	 [62,35,255],
	 [60,255,60],
	 [255,35,98],
	 [45,175,230],
	 [255,0,255],
	 [255,128,0]);

     var step = 0;
     //color table indices for: 
     // current color left
     // next color left
     // current color right
     // next color right
     var colorIndices = [0,1,2,3];

     //transition speed
     var gradientSpeed = 0.001;

     function updateGradient()
     {
	 
	 if ( $===undefined ) return;
	 
	 var c0_0 = colors[colorIndices[0]];
	 var c0_1 = colors[colorIndices[1]];
	 var c1_0 = colors[colorIndices[2]];
	 var c1_1 = colors[colorIndices[3]];

	 var istep = 1 - step;
	 var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);
	 var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);
	 var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);
	 var color1 = "rgb("+r1+","+g1+","+b1+")";

	 var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);
	 var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);
	 var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);
	 var color2 = "rgb("+r2+","+g2+","+b2+")";

	 $('.wrapper').css({
	     background: "-webkit-gradient(linear, left top, right top, from("+color1+"), to("+color2+"))"}).css({
		 background: "-moz-linear-gradient(left, "+color1+" 0%, "+color2+" 100%)"});
	 
	 step += gradientSpeed;
	 if ( step >= 1 )
	     {
		 step %= 1;
		 colorIndices[0] = colorIndices[1];
		 colorIndices[2] = colorIndices[3];
		 
		 //pick two new target color indices
		 //do not pick the same as the current one
		 colorIndices[1] = ( colorIndices[1] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;
		 colorIndices[3] = ( colorIndices[3] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;
		 
	     }
     }

     setInterval(updateGradient,10);
     
     var app = angular.module('myApp', ['ngAnimate', 'ngResource']);

     app.config(['$interpolateProvider', function($interpolateProvider) {
	 $interpolateProvider.startSymbol('{a');
	 $interpolateProvider.endSymbol('a}');
     }]);
     
     app.controller('myController', function ($scope, $http, $log, $window){
	 // the business logic very messy I know since I began writing this code after 2 hours of beginning angularjs
	 $scope.hideIt = false;
	 $scope.hideIt1 = false;
	 
	 $scope.formData = {};
	 $scope.loginData = {};
	 
	 $scope.userTruth = true;
	 $scope.emailTruth = true;

	 $scope.message = {
	     truth: false
	 };

	 
	 $http.get('/api/whoami')
	      .success(function (data, status) {
		  $window.location.href = '/dashboard';
	      });
	 
	 $scope.$watchCollection('formData.username', function (username) {
	     $http.get('/api/valid_username/'+username)
		  .success(function (data, status, header, config){
		      $log.log(data);
		      $scope.userTruth = false;
		  })
		  .error(function (data, status, header, config){
		      $log.log(data);
		      $scope.userTruth = true;
		  });
	 });

	 $scope.$watchCollection('formData.email', function (email) {
	     $http.get('/api/valid_email/'+email)
		  .success(function (data, status, header, config){
		      $log.log(data);
		      $scope.emailTruth = false;
		  })
		  .error(function (data, status, header, config){
		      $log.log(data);
		      $scope.emailTruth = true;
		  });
	 });


	 $scope.logEvt = function () {
	     // if it's already true submit
	     if ($scope.hideIt1) {
		 $http.post('/api/login', {
		     username: $scope.loginData.username,
		     password: $scope.loginData.password
		 },{
		     headers: { 'Content-Type': 'application/json'}
		 })
		      .success(function () {
			  $window.location.href = '/dashboard';
		      })

		      .error(function (data, status, headers, config) {
			  $scope.message.truth = true;
			  $scope.message.data = data.error.detail;
			  $('#myElem2').css('margin-top', '0px');
		      });
		 
	     }
	     else {
		 $('#myElem1').addClass('animated fadeInDown');
		 $scope.hideIt1 = true;
	     };
	     
	 };
	 
	 $scope.registerUser = function () {
	     
	     $scope.hideIt = true;
	     $('#myElem').addClass('animated fadeInDown');
	
	     $scope.connectRest = function () {
		 $http.post('/api/register_user', {
		     username: $scope.formData.username,
		     password: $scope.formData.password,
		     email   : $scope.formData.email
		 }, {
		     headers: { 'Content-Type': 'application/json'}
		 })
		      .success(function (data, status, header, config){
			  $http.post('/api/login', {
			      username: $scope.formData.username,
			      password: $scope.formData.password
			  },{
			      headers: { 'Content-Type': 'application/json'}
			  })
			       .success(function () {
				   $window.location.href = '/dashboard';
			       }) ;
				   
			       
		      })
		      .error(function (data, status, header, config) {
			  $scope.message.truth = true;
			  $scope.message.data = data.error.detail;
			  $('#myElem2').css('margin-top', '0px');
		      });
	     };
	 };
	 
     });
     
    </script>
{% endblock %}
